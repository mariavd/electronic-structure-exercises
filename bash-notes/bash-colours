###########################################################################################################
#
# Rows starting with a hash sign are comments. They are not processed. It is a
# handy way to keep notes for yourself
# 
# This is a list of colours you can use to make your terminal prettier. Enable
# them by removing the hash signs and then edit the PS1 variable. 
#
# Check here for more info
#
# https://www.cyberciti.biz/faq/bash-shell-change-the-color-of-my-shell-prompt-under-linux-or-unix/
#
###########################################################################################################

# Some setup collected from the web
#
# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in  
    xterm-color) color_prompt=yes;;
esac 

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window   
# should be on the output of commands, not on the prompt        
#force_color_prompt=yes                       
#
if [ -n "$force_color_prompt" ]; then  
   if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then           
      # We have color support; assume it's compliant with Ecma-48     
      # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
      # a case would tend to support setf rather than setaf.)        
      color_prompt=yes   
   else 
      color_prompt=      
   fi                 
fi   

if [ "$color_prompt" = yes ]; then     
   PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ ' 
else  
   PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ ' 
fi
unset color_prompt force_color_prompt




# enable color support of ls and also add handy aliases 
if [ -x /usr/bin/dircolors ]; then 
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'                 
    #alias dir='dir --color=auto'              
    #alias vdir='vdir --color=auto'                        
    alias grep='grep --color=auto' # might already exist in the bashrc
    alias fgrep='fgrep --color=auto'           
    alias egrep='egrep --color=auto'       
    LS_COLORS='di=1;94'
    export LS_COLORS
fi            


#RED='\[\e[0;31m'
#YELLOW='\[\e[0;33m'
#BLACK='\[\e[0;30m'
#GREEN='\[\e[0;32m'
#BLUE='\[\e[0;34m\]'
#PURPLE='\[\e[0;35m'
#CYAN='\[\e[0;36m'
#GRAY='\[\e[0;37m'
#
#RED_BOLD='\[\e[1;31m'
YELLOW_BOLD='\[\e[1;33m\]'
#BLACK_BOLD='\[\e[1;30m'
#GREEN_BOLD='\[\e[1;32m'
#BLUE_BOLD='\[\e[1;34m'
#PURPLE_BOLD='\[\e[1;35m\]'
CYAN_BOLD='\[\e[1;36m\]'
#GRAY_BOLD='\[\e[1;37m'
#
#RED_ITALIC='\[\e[2;31m'
#YELLOW_ITALIC='\[\e[2;33m'
#BLACK_ITALIC='\[\e[2;30m'
#GREEN_ITALIC='\[\e[2;32m'
#BLUE_ITALIC='\[\e[2;34m'
#PURPLE_ITALIC='\[\e[2;35m'
#CYAN_ITALIC='\[\e[2;36m'
#GRAY_ITALIC='\[\e[2;37m'


DEFAULT_COLOUR='\[\e[0;39m\]'
DEFAULT_BOLD='\[\e[1;39m\]'

# 0   = default colour
# 1   = bold
# 4   = underlined
# 5   = flashing text (disabled on some terminals)
# 7   = reverse field (exchange foreground and background color)
# 8   = concealed (invisible)

#export PS1="$YELLOW_BOLD[$CYAN_BOLD\u$DEFAULT_BOLD@$CYAN_BOLD\h$DEFAULT_BOLD \W$YELLOW_BOLD]$ $DEFAULT_COLOUR"
export PS1="$YELLOW_BOLD[$CYAN_BOLD\h$DEFAULT_BOLD \W$YELLOW_BOLD]$ $DEFAULT_COLOUR"

